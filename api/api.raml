#%RAML 1.0
title: Establishments Infractions API
baseUri: http://localhost:5000/
version: v1

/contrevenants:
  get:
    description: Retrieves a list of violations, showing the count of contraventions per establishment, between two specified dates.
    queryParameters:
      du:
        description: The start date in ISO 8601 format (YYYY-MM-DD).
        type: string
        required: true
      au:
        description: The end date in ISO 8601 format (YYYY-MM-DD).
        type: string
        required: true
    responses:
      200:
        body:
          application/json:
            example: |
              [{"count":1,"etablissement":"BOULANGERIE CHESKIE"},{"count":1,"etablissement":"RESTAURANT A & W"}]

/establishments:
  get:
    description: Retrieves a list of establishments and the count of known infractions for each, sorted in descending order by the number of infractions.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "etablissement": "Restaurant XYZ",
                  "infraction_count": 12
                },
                {
                  "etablissement": "Cafe ABC",
                  "infraction_count": 8
                }
              ]

/establishments_xml:
  get:
    description: Retrieve a list of establishments with the count of known violations in XML format.
    responses:
      200:
        body:
          application/xml:
            example: |
              <?xml version="1.0" encoding="UTF-8"?>
              <establishments>
                <establishment>
                  <name>BOULANGERIE CHESKIE</name>
                  <violations>5</violations>
                </establishment>
                <establishment>
                  <name>RESTAURANT A & W</name>
                  <violations>3</violations>
                </establishment>
              </establishments>

types:
  EstablishmentCsv:
    type: file
    fileTypes: ['text/csv']
    description: CSV contenant le nom de l'établissement et le nombre d'infractions.

/establishments_csv:
  get:
    description: Obtient une liste des établissements avec le nombre d'infractions en format CSV.
    responses:
      200:
        body:
          text/csv:
            type: EstablishmentCsv
            example: |
              "Etablissement","Nombre d'Infractions"
              "Café du Monde",5
              "Boulangerie Pierre",3
            description: Réponse CSV avec l'en-tête et les lignes représentant chaque établissement et son nombre d'infractions.
      400:
        description: Requête malformée. L'URL doit être correctement formatée.
      500:
        description: Erreur interne du serveur.

types:
  demande_inspection:
    type: object
    properties:
      nom_etablissement: string
      adresse: string
      ville: string
      date_visite: date-only
      nom_client: string
      prenom_client: string
      description_probleme: string
    required:
      - nom_etablissement
      - adresse
      - ville
      - date_visite
      - nom_client
      - prenom_client
      - description_probleme

/demande_inspection:
  post:
    description: Create a new inspection request
    body:
      application/json:
        type: InspectionRequest
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "Demande d'inspection reçue avec succès."
              }
      400:
        body:
          application/json:
            example: |
              {
                "error": "Validation failed for one or more fields."
              }
      500:
        description: Internal Server Error
        body:
          application/json:
            example: |
              {
                "error": "Internal server error. Please try again later."
              }


/demande_inspection/{requestId}:
  uriParameters:
    requestId:
      description: Identifiant unique de la demande d'inspection
      type: integer
  delete:
    description: Supprime une demande d'inspection spécifique
    responses:
      200:
        body:
          application/json:
            example: |
              { "message": "La demande d'inspection a été supprimée avec succès." }
      404:
        body:
          application/json:
            example: |
              { "error": "Demande d'inspection non trouvée." }
/create_user_profile:
  post:
    description: Create a new user profile.
    body:
      application/json:
        type: /schemas/user_profile_schema.json
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "message": "User profile created successfully."
              }
      400:
        body:
          application/json:
            example: |
              {
                "error": "Validation failed for one or more fields."
              }
      500:
        description: Internal Server Error
        body:
          application/json:
            example: |
              {
                "error": "Internal server error. Please try again later."
              }

/doc:
  get:
    description: Provides the RAML documentation of this API.
